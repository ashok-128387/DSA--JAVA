import java.io.*;

class linkedlist {
    Node head;

    class Node {
        int data;
        Node next;

        Node(int value) {
            data = value;
            next = null;
        }
    }

    linkedlist() {
        head = null;
    }

    public void insertatbeginning(int value) {
        Node newnode = new Node(value);
        if (head == null)
            head = newnode;
        else {
            newnode.next = head;
            head = newnode;
        }
    }

    public void display() {
        Node temp = head;
        while (temp != null) {
            System.out.println(temp.data + "");
            temp = temp.next;
        }
    }

    public void insertatposition(int pos, int value) {
        if (pos == 0) {
            insertatbeginning(value);
            return;
        }
        Node newnode = new Node(value);
        Node temp = head;
        for (int i = 1; i < pos; i++) {
            temp = temp.next;
            if (temp == null)
                throw new IndexOutOfBoundsException("ivalid");
        }
        newnode.next = temp.next;
        temp.next = newnode;
    }

    public void deleteposition(int pos) {
        if (head == null)
            throw new IndexOutOfBoundsException("INVALID");
        if (pos == 0) {
            head = head.next;
            return;
        }
        Node temp = head;
        Node prev = null;
        for (int i = 1; i <= pos; i++) {
            prev = temp;
            temp = temp.next;
        }
        prev.next = temp.next;
    }

    public void deleteatbeginning() {
        if (head == null)
            throw new IndexOutOfBoundsException("INVALID");
        head = head.next;
    }
}

public class number {
    public static void main(String[] args) {
        linkedlist list = new linkedlist();
        list.insertatbeginning(102);
        list.insertatbeginning(103);
        list.insertatbeginning(104);
        list.insertatbeginning(105);
        list.display();
        System.out.println("");
        list.insertatposition(2, 23);
        list.insertatposition(3, 1);
        list.insertatposition(4, 12);
        list.insertatposition(1, 1);
        list.display();
        list.deleteposition(2);
        list.display();
    }
}
